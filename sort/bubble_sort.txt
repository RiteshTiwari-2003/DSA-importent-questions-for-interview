// bubble sort //
// brute force approach in python //
def bubble-sort_brute(arr):
    n=len(arr)
    for i in range(n):
        for j in range(n-1):
            if(arr[j]>arr[j+1]):
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr
arr = [64, 34, 25, 12, 22, 11, 90]
print("Sorted:", bubble_sort_brute(arr))
//in  java 

public class bubblesortbrute{
    public static void bubblesort(int[] arr){
        int n=arr.length;
        for(int i=0;i<n;i++){
            for(int j=0;j<n-1;j++){
                if(arr[j]>arr[j+1]){
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }
    }
    public static void main(String[] args){
        int[] arr = {64, 34, 25, 12, 22, 11, 90};
        bubbleSort(arr);
        for (int num : arr)
            System.out.print(num + " ");
    }
}

//2 . beeter approach
def bubblesort(arr):
    n=len(arr)
    for i in range(n):
        for j in range(n-i-1):
            if ar[j]>arr[j+1]:
                arr[j],arr[j+1]=arr[j+1],arr[j]
    return arr
arr = [64, 34, 25, 12, 22, 11, 90]
print("Sorted:", bubble_sort_better(arr))

//java 
public class bubblesort{
    public static void bubblesort(int[] arr){
        int n=arr.lenght;
        for(int i=0;i<n;i++){
            for(int j=0;j<n-i-1;j++){
                if(arr[j]>arr[j+1]){
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }

    }
    public static void main(String[] args) {
        int[] arr = {64, 34, 25, 12, 22, 11, 90};
        bubbleSort(arr);
        for (int num : arr)
            System.out.print(num + " ");
    }
}

//3 . optimal approach 
//python
def bubblesort(arr):
    n=len(arr)
    for i in range(n):
        swapped=False 
        for j in range(n-i-1):
            if arr[j]>arr[j+1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
                swapped = True
        if not swapped:
            break
    return arr
arr = [64, 34, 25, 12, 22, 11, 90]
print("Sorted:", bubble_sort_optimal(arr))

//java 
public class bubblesort{
    public static void bubblesort(int[] arr){
        int n=arr.length;
        for(int i=0;i<n;i++){
            boolean swapped=false;
            for(int j=0;j<n-i-1;j++){
                if (arr[j]>arr[j+1]){
                    // swap
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                    swapped = true;
                }
            }
            if (!swapped) break; // Early exit
        }
    }
    public static void main(String[] args) {
        int[] arr = {64, 34, 25, 12, 22, 11, 90};
        bubbleSort(arr);
        for (int num : arr)
            System.out.print(num + " ");
    }
}