## rotate an matrix or image by 90 degree 

brute force approach in python 
def rotate_brute(arr):
    n=len(matrix)
    result=[[0]*n for i in range(n)]
    for i in range(n):
        for j in range(n);
            result[j][n-1-i]=matrix[i][j]
    return result 

mat = [[1,2,3],[4,5,6],[7,8,9]]
print("Brute Force:", rotate_brute(mat))

in java 
import java.util.*;
pubic class Rotatematrix{
    public static int[][] rotatebrute(int[][] matrix){
        int n=matrix.length;
        int[][] result=new int[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                result[j][n-1-i]=matrix[i][j];
            }
        }
        return result;

    }
    public static void main(String[] args){
        int[][] mat={{1,2,3},{4,5,6},{7,8,9}};
        int[][] res=rotatebrute(mat);
        for(int[] row:res){
            System.out.println(Arrays.toString(row));
        }
    }
}

### 2 . better approach in python 
def rotate_matrix_better(mat):
    n=len(mat)
    for i in range(n):
        for j in range(i+1,n):
            mat[i][j],mat[j][i]=mat[j][i],mat[i][j]
    for row in mat:
        row.reverse()

mat = [[1,2,3],[4,5,6],[7,8,9]]
rotate_better(mat)
print("Better:", mat)

in java better 
import java.util.*;
public class rotatematrix{
    public static void rotateBetter(int[][] matrix){
        int n=matrix.length;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                int temp=matrix[i][j];
                matrix[i][j]=matrix[j][i];
                matrix[j][i]=temp;

            }
        }
        for(int i=0;i<n;i++){
            for(int j=0,k=n-1;j<k;j++,k--){
                int temp=matrix[i][j];
                matrix[i][j]=matrix[i][k];
                matrix[i][k]=temp;

            }
        }
    }
    public static void main(String[] args) {
        int[][] mat = {{1,2,3},{4,5,6},{7,8,9}};
        rotateBetter(mat);
        for (int[] row : mat) System.out.println(Arrays.toString(row));
    }
}
  what is the dsa ?
  dss is basically a structured and professional store of data and objects   

  